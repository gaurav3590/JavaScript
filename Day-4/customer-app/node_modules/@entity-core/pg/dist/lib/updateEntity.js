"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const sql_template_strings_1 = __importDefault(require("sql-template-strings"));
function updateEntity({ context, entity, }) {
    return __awaiter(this, void 0, void 0, function* () {
        if (entity.id === undefined || entity.type === undefined) {
            throw new Error(`entity must have an id and type`);
        }
        const dataSource = context.dataSource;
        const table = dataSource.tablePrefix + `entity`;
        const client = (yield context.getDB());
        const tenantID = context.getTenantID();
        const query = sql_template_strings_1.default `
        UPDATE "`.append(table).append(sql_template_strings_1.default `"
          SET props = ${entity.props || null}
        WHERE tenant_id = ${tenantID}
          AND entity_type = ${entity.type}
          AND id = ${entity.id}
    `);
        yield client.query(query);
    });
}
exports.default = updateEntity;
//# sourceMappingURL=updateEntity.js.map